schemaVersion: "1.0.0"

globalEnvVars:
  - key: "VIRTUAL_ENV"
    value: "/env"
  - key: "PATH"
    value: "/env/bin:$PATH"

commandTests:
  - name: "python installation"
    command: ["which", "python3.4"]
    expectedOutput: ["/usr/bin/python3.4\n"]

  - name: "virtualenv python installation"
    setup: [["virtualenv", "-p", "python3.4", "/env"]]
    command: ["which", "python"]
    expectedOutput: ["/env/bin/python\n"]

  - name: "virtualenv python3 installation"
    setup: [["virtualenv", "-p", "python3.4", "/env"]]
    command: ["which", "python3"]
    expectedOutput: ["/env/bin/python3\n"]

  - name: "python version"
    setup: [["virtualenv", "-p", "python3.4", "/env"]]
    command: ["python", "--version"]
    expectedOutput: ["Python 3.4.2\n"]

  - name: "pip installation"
    setup: [["virtualenv", "-p", "python3.4", "/env"]]
    command: ["which", "pip"]
    expectedOutput: ["/env/bin/pip\n"]

  - name: "pip3 installation"
    setup: [["virtualenv", "-p", "python3.4", "/env"]]
    command: ["which", "pip3"]
    expectedOutput: ["/env/bin/pip3\n"]

  - name: "gunicorn flask"
    setup: [["virtualenv", "-p", "python3.4", "/env"], ["pip", "install", "gunicorn", "flask"]]
    command: ["which", "gunicorn"]
    expectedOutput: ["/env/bin/gunicorn"]

  - name: "flask integration"
    command: ["python", "-c", "\"import sys; import flask; sys.exit(0 if flask.__file__.startswith('/env') else 1)\""]

  - name: "test.support"
    command: ["python", "-c", "\"from test import pystone, regrtest, support\""]
